{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todo.js","components/AddTodo.js","components/pages/About.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","props","getStyle","borderBottom","todo","completed","updateTodo","id","state","title","setState","inputType","console","log","inputValue","description","this","deadline","type","onChange","markComplete","bind","checkboxStyle","className","onClick","delTodo","btnStyle","editBtnStyle","Component","border","borderRadius","cursor","float","boxShadow","Todos","todos","map","key","AddTodo","text","addDivStyle","addTodo","display","alignSelf","fontSize","About","Fragment","Form","onSubmit","name","handleDescriptionChange","handleDeadlineChange","React","App","counter","inputDescription","inputDeadline","filter","length","event","target","value","newId","inputTodo","concat","taskObject","fetch","then","res","json","todosLength","flag","newTodo","includes","setInterval","exact","path","render","Todo","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ed1a4d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>React App</h1>\r\n      <Link style={linkStyle} to=\"/my-app\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n  color: '#fff',\r\n  textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","  \r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n  constructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n      title: 'Edit',\r\n      inputType: \"checkbox\"\t,\r\n      inputValue: this.props.description\r\n\t\t}   \r\n    };\r\n  getStyle = () => {\r\n    return {\r\n      background:'#00FFFF',  \r\n      padding: '10px',\r\n      borderBottom: '1px #ccc dotted',\r\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n    }\r\n  }\r\n  // Delete Todo\r\n  updateTodo = (id) => { \r\n    if(this.state.title === 'Edit'){\r\n      //const inputValue = this.props.description;\r\n      this.setState({title: 'Update'});\r\n      this.setState({inputType: 'text'});      \r\n    }      \r\n    else{\r\n      this.setState({title: 'Edit'});\r\n      this.setState({inputType: 'checkbox'});\r\n    } \r\n    console.log(this.state.title);   \r\n};\r\n  render() {\r\n    const { id, description , deadline} = this.props.todo;\r\n    const {title} = this.state;   \r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input type= {this.state.inputType} onChange={this.props.markComplete.bind(this, id) } \r\n          style={checkboxStyle} className = 'inputCheckbox'/> {' '}\r\n          { description } | {deadline}\r\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>Delete</button>\r\n          <button onClick={this.updateTodo} style={editBtnStyle}>{''} {title}</button> \r\n        </p>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nconst btnStyle = {\r\n  background: '#ff0000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 19px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  float: 'right'  \r\n}\r\nconst editBtnStyle={\r\n  background: '#ffA500',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 19px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  float: 'right'  \r\n}\r\nconst checkboxStyle = {\r\n  boxShadow: '0 0 0 5px orange'\r\n\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key={todo.id} todo={todo} \r\n      markComplete={this.props.markComplete} delTodo={this.props.delTodo} \r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Todos;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component { \r\n\r\n  render() {\r\n    const {id, text} = this.props;    \r\n     console.log(text);\r\n    return (\r\n      <div className=\"addDiv\" style={addDivStyle}>        \r\n        <button onClick={this.props.addTodo.bind(this, id)} style={btnStyle}>Add Todo</button>\r\n        <p/>{''} {text}       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n}\r\nconst addDivStyle ={\r\n  display: 'flex', \r\n  alignSelf: 'center'\r\n}\r\nconst btnStyle = {\r\n  background: '#008000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 15px',\r\n  borderRadius: '70%',\r\n  cursor: 'pointer',\r\n  fontSize: '20px' \r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app. It is part of a React course in HackYourFuture</p>\r\n      <p>You can add your to do lists and delete one by one by clicking \"Add Todo\" and Delete button respectively.</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    \r\n    render(){\r\n        const {id}= this.props;        \r\n        return(\r\n            <form onSubmit = {this.props.addTodo.bind(this, id)}>\r\n                <div>\r\n                    <label>Todo description</label>\r\n                    <input type='text' name = 'description'  onChange = {this.props.handleDescriptionChange} />\r\n                </div>\r\n                <div>\r\n                    <label>deadline</label>\r\n                    <input type='date' name = 'deadline'  onChange = {this.props.handleDeadlineChange}/>\r\n                </div>\r\n            </form>\r\n        )\r\n    }    \r\n} \r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/layout/Header';\r\nimport Todos from './components/Todo';\r\nimport AddTodo from './components/AddTodo';\r\nimport About from './components/pages/About';\r\nimport Form from './components/Form';\r\nimport './App.css';\r\n//App component class\r\nclass App extends Component {\r\n\tstate = {\r\n\t\ttodos: [],\r\n    counter:0,\r\n    text: 'No Item',\r\n    inputDescription:'',\r\n    inputDeadline: ''\r\n\t};\r\n  //excuted when the component is mounted\r\n\tcomponentDidMount() {\r\n\t\tsetInterval(() => {\r\n      this.setState({counter: this.state.counter+1})\r\n    }, 1000);    \r\n\t}\r\n\r\n\t// Toggle Complete\r\n\tmarkComplete = (id) => {\r\n\t\tthis.setState({\r\n\t\t\ttodos: this.state.todos.map((todo) => {\r\n\t\t\t\tif (todo.id === id) {\r\n\t\t\t\t\ttodo.completed = !todo.completed;\r\n\t\t\t\t}\r\n\t\t\t\treturn todo;\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n  // Delete Todo\r\n  delTodo = (id) => {  \r\n        this.setState({\r\n          todos: [...this.state.todos.filter((todo) => todo.id !== id)]\r\n        })\r\n        if(this.state.todos.length ===1)\r\n          this.setState({text: 'No Item'}); \r\n        console.log(this.state.todos);   \r\n  };\r\n  // Delete Todo\r\n  updateTodo = (id) => {  \r\n    this.setState({title: 'Update'}); \r\n    console.log(this.state.title);   \r\n};\r\nhandleDescriptionChange = event => {\r\n  this.setState({\r\n    inputDescription: event.target.value\r\n  })\r\n  }\r\n  handleDeadlineChange = event => {\r\n  this.setState({\r\n    inputDeadline: event.target.value\r\n      })      \r\n}\r\n  // Add Todo\r\n  addTodo = () => {   \r\n    if(this.state.inputDescription!== '' && this.state.inputDeadline!== ''){\r\n      let newId;\r\n      if(this.state.todos.length)\r\n        newId = this.state.todos.length +1;\r\n      else\r\n        newId = 4;\r\n      const inputTodo = { description: this.state.inputDescription,\r\n                          deadline: this.state.inputDeadline,\r\n                          id: newId\r\n                        }\r\n      this.setState({ todos: this.state.todos.concat(inputTodo) });      \r\n      console.log(this.state.todos);\r\n      this.setState({inputDescription:''});\r\n      this.setState({inputDeadline: ''});\r\n\r\n    }\r\n    else { \r\n      let taskObject;\r\n      fetch( 'https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw')\r\n        .then(res =>res.json())\r\n        .then(json => {\r\n         taskObject = json;        \r\n        let todosLength=this.state.todos.length;\r\n        let flag = false;\r\n        while((todosLength < taskObject.length ) && !flag){       \r\n        const  newTodo = taskObject[todosLength];\r\n        if(this.state.todos.includes(newTodo)) \r\n          todosLength += 1;\r\n        else{\r\n          this.setState({ todos: this.state.todos.concat(newTodo) }); \r\n          flag = true;\r\n        }          \r\n      }; \r\n      })        \r\n      \r\n    }    \r\n    if(this.state.todos)\r\n      this.setState({text: ''});   \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='App'>\r\n          <div className='container'>\r\n            <Header />\r\n            <Route\r\n              exact\r\n              path='/my-app' \r\n              render={(props) => (\r\n                <React.Fragment>\r\n                  <h1>Tasks Todo</h1>\r\n                  <h1>You have used {this.state.counter} seconds on this website</h1>\r\n                  <div>\r\n                    <Form addTodo = {this.addTodo} \r\n                      handleDescriptionChange = { this.handleDescriptionChange}\r\n                      handleDeadlineChange = { this.handleDeadlineChange }\r\n                    />\r\n                  </div>\r\n                  <div className=\"todoForm\">\r\n                    <AddTodo todos={this.state.todos} addTodo={this.addTodo} text={this.state.text}/>\r\n                    <Todos\r\n                      todos={this.state.todos}\r\n                      title={this.state.title}\r\n                      markComplete={this.markComplete}\r\n                      delTodo={this.delTodo}                      \r\n                    />\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route path='/about' component={About} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}